#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuesNaire
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_naireweb")]
	public partial class NaireWebDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertadmin_info(admin_info instance);
    partial void Updateadmin_info(admin_info instance);
    partial void Deleteadmin_info(admin_info instance);
    partial void Insertuser_info(user_info instance);
    partial void Updateuser_info(user_info instance);
    partial void Deleteuser_info(user_info instance);
    partial void Insertquestion_info(question_info instance);
    partial void Updatequestion_info(question_info instance);
    partial void Deletequestion_info(question_info instance);
    partial void Insertdata_info(data_info instance);
    partial void Updatedata_info(data_info instance);
    partial void Deletedata_info(data_info instance);
    partial void Insertnaire_info(naire_info instance);
    partial void Updatenaire_info(naire_info instance);
    partial void Deletenaire_info(naire_info instance);
    #endregion
		
		public NaireWebDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db_nairewebConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NaireWebDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NaireWebDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NaireWebDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NaireWebDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<admin_info> admin_info
		{
			get
			{
				return this.GetTable<admin_info>();
			}
		}
		
		public System.Data.Linq.Table<user_info> user_info
		{
			get
			{
				return this.GetTable<user_info>();
			}
		}
		
		public System.Data.Linq.Table<question_info> question_info
		{
			get
			{
				return this.GetTable<question_info>();
			}
		}
		
		public System.Data.Linq.Table<data_info> data_info
		{
			get
			{
				return this.GetTable<data_info>();
			}
		}
		
		public System.Data.Linq.Table<naire_info> naire_info
		{
			get
			{
				return this.GetTable<naire_info>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admin_info")]
	public partial class admin_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _account;
		
		private string _password;
		
		private string _name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public admin_info()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="NChar(60) NOT NULL", CanBeNull=false)]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(60) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(60) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_info")]
	public partial class user_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _account;
		
		private string _password;
		
		private string _name;
		
		private string _avatar;
		
		private EntityRef<naire_info> _naire_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnavatarChanging(string value);
    partial void OnavatarChanged();
    #endregion
		
		public user_info()
		{
			this._naire_info = default(EntityRef<naire_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="NChar(60)")]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(60)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(60)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatar", DbType="NVarChar(MAX)")]
		public string avatar
		{
			get
			{
				return this._avatar;
			}
			set
			{
				if ((this._avatar != value))
				{
					this.OnavatarChanging(value);
					this.SendPropertyChanging();
					this._avatar = value;
					this.SendPropertyChanged("avatar");
					this.OnavatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_info_naire_info", Storage="_naire_info", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public naire_info naire_info
		{
			get
			{
				return this._naire_info.Entity;
			}
			set
			{
				naire_info previousValue = this._naire_info.Entity;
				if (((previousValue != value) 
							|| (this._naire_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._naire_info.Entity = null;
						previousValue.user_info = null;
					}
					this._naire_info.Entity = value;
					if ((value != null))
					{
						value.user_info = this;
					}
					this.SendPropertyChanged("naire_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.question_info")]
	public partial class question_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _naire_id;
		
		private int _flag;
		
		private string _title;
		
		private string _items;
		
		private EntitySet<data_info> _data_info;
		
		private EntityRef<naire_info> _naire_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onnaire_idChanging(int value);
    partial void Onnaire_idChanged();
    partial void OnflagChanging(int value);
    partial void OnflagChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnitemsChanging(string value);
    partial void OnitemsChanged();
    #endregion
		
		public question_info()
		{
			this._data_info = new EntitySet<data_info>(new Action<data_info>(this.attach_data_info), new Action<data_info>(this.detach_data_info));
			this._naire_info = default(EntityRef<naire_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naire_id", DbType="Int NOT NULL")]
		public int naire_id
		{
			get
			{
				return this._naire_id;
			}
			set
			{
				if ((this._naire_id != value))
				{
					if (this._naire_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnaire_idChanging(value);
					this.SendPropertyChanging();
					this._naire_id = value;
					this.SendPropertyChanged("naire_id");
					this.Onnaire_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="Int NOT NULL")]
		public int flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_items", DbType="NVarChar(MAX)")]
		public string items
		{
			get
			{
				return this._items;
			}
			set
			{
				if ((this._items != value))
				{
					this.OnitemsChanging(value);
					this.SendPropertyChanging();
					this._items = value;
					this.SendPropertyChanged("items");
					this.OnitemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="question_info_data_info", Storage="_data_info", ThisKey="id", OtherKey="question_id")]
		public EntitySet<data_info> data_info
		{
			get
			{
				return this._data_info;
			}
			set
			{
				this._data_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="naire_info_question_info", Storage="_naire_info", ThisKey="naire_id", OtherKey="id", IsForeignKey=true)]
		public naire_info naire_info
		{
			get
			{
				return this._naire_info.Entity;
			}
			set
			{
				naire_info previousValue = this._naire_info.Entity;
				if (((previousValue != value) 
							|| (this._naire_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._naire_info.Entity = null;
						previousValue.question_info.Remove(this);
					}
					this._naire_info.Entity = value;
					if ((value != null))
					{
						value.question_info.Add(this);
						this._naire_id = value.id;
					}
					else
					{
						this._naire_id = default(int);
					}
					this.SendPropertyChanged("naire_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_data_info(data_info entity)
		{
			this.SendPropertyChanging();
			entity.question_info = this;
		}
		
		private void detach_data_info(data_info entity)
		{
			this.SendPropertyChanging();
			entity.question_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_info")]
	public partial class data_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _question_id;
		
		private string _data;
		
		private EntityRef<question_info> _question_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onquestion_idChanging(int value);
    partial void Onquestion_idChanged();
    partial void OndataChanging(string value);
    partial void OndataChanged();
    #endregion
		
		public data_info()
		{
			this._question_info = default(EntityRef<question_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question_id", DbType="Int NOT NULL")]
		public int question_id
		{
			get
			{
				return this._question_id;
			}
			set
			{
				if ((this._question_id != value))
				{
					if (this._question_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onquestion_idChanging(value);
					this.SendPropertyChanging();
					this._question_id = value;
					this.SendPropertyChanged("question_id");
					this.Onquestion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="question_info_data_info", Storage="_question_info", ThisKey="question_id", OtherKey="id", IsForeignKey=true)]
		public question_info question_info
		{
			get
			{
				return this._question_info.Entity;
			}
			set
			{
				question_info previousValue = this._question_info.Entity;
				if (((previousValue != value) 
							|| (this._question_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._question_info.Entity = null;
						previousValue.data_info.Remove(this);
					}
					this._question_info.Entity = value;
					if ((value != null))
					{
						value.data_info.Add(this);
						this._question_id = value.id;
					}
					else
					{
						this._question_id = default(int);
					}
					this.SendPropertyChanged("question_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.naire_info")]
	public partial class naire_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private string _title;
		
		private string _hint;
		
		private string _state;
		
		private string _start_time;
		
		private string _update_time;
		
		private string _questions;
		
		private int _data;
		
		private EntitySet<question_info> _question_info;
		
		private EntityRef<user_info> _user_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnhintChanging(string value);
    partial void OnhintChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void Onstart_timeChanging(string value);
    partial void Onstart_timeChanged();
    partial void Onupdate_timeChanging(string value);
    partial void Onupdate_timeChanged();
    partial void OnquestionsChanging(string value);
    partial void OnquestionsChanged();
    partial void OndataChanging(int value);
    partial void OndataChanged();
    #endregion
		
		public naire_info()
		{
			this._question_info = new EntitySet<question_info>(new Action<question_info>(this.attach_question_info), new Action<question_info>(this.detach_question_info));
			this._user_info = default(EntityRef<user_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._user_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hint", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string hint
		{
			get
			{
				return this._hint;
			}
			set
			{
				if ((this._hint != value))
				{
					this.OnhintChanging(value);
					this.SendPropertyChanging();
					this._hint = value;
					this.SendPropertyChanged("hint");
					this.OnhintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this.Onstart_timeChanging(value);
					this.SendPropertyChanging();
					this._start_time = value;
					this.SendPropertyChanged("start_time");
					this.Onstart_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_time", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string update_time
		{
			get
			{
				return this._update_time;
			}
			set
			{
				if ((this._update_time != value))
				{
					this.Onupdate_timeChanging(value);
					this.SendPropertyChanging();
					this._update_time = value;
					this.SendPropertyChanged("update_time");
					this.Onupdate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questions", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string questions
		{
			get
			{
				return this._questions;
			}
			set
			{
				if ((this._questions != value))
				{
					this.OnquestionsChanging(value);
					this.SendPropertyChanging();
					this._questions = value;
					this.SendPropertyChanged("questions");
					this.OnquestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Int NOT NULL")]
		public int data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="naire_info_question_info", Storage="_question_info", ThisKey="id", OtherKey="naire_id")]
		public EntitySet<question_info> question_info
		{
			get
			{
				return this._question_info;
			}
			set
			{
				this._question_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_info_naire_info", Storage="_user_info", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public user_info user_info
		{
			get
			{
				return this._user_info.Entity;
			}
			set
			{
				user_info previousValue = this._user_info.Entity;
				if (((previousValue != value) 
							|| (this._user_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user_info.Entity = null;
						previousValue.naire_info = null;
					}
					this._user_info.Entity = value;
					if ((value != null))
					{
						value.naire_info = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("user_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_question_info(question_info entity)
		{
			this.SendPropertyChanging();
			entity.naire_info = this;
		}
		
		private void detach_question_info(question_info entity)
		{
			this.SendPropertyChanging();
			entity.naire_info = null;
		}
	}
}
#pragma warning restore 1591
